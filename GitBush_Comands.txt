GIT Bash

git init # создать новый проект в текущей папке

git init folder-name # создать новый проект в указанной папке

Git status # текущее состояние репозитория

Git add "filename" # добавить изменение в репозиторий

Git checkout ‘branchname’ # навигация по веткам

Git checkout -b ‘branchname’ # создать ветку и перейти в неё

git branch --merged # показать ветки, уже слитые с активной

git branch --no-merged # показать ветки, не слитые с активной

Git commit -a -m "text message" # внести изменение и проиндексировать

Git add . # внести изменение, добавив все файлы

Перенос коммитов

Git merge # добавление изменений из двух веток в одну, создается новый коммит с hash`ом (все изменения в одном коммите)

Git rebase feature master # все коммиты в ветке feature будут после коммитов, которые добавили с master, история коммитов в одну линию

Запушить на удаленный репозиторий:

git push origin feature –force

либо git push origin +feature

Git cherry-pick ‘hash’ -edit # позволяет скопировать один или несколько коммитов из одной ветки в другую, в другой ветке образуется новый коммит,

-edit # при выполнении команды git запросит новый message для коммита, который переносится в ветку

Git cherry-pick hash –no-commit # изменения из коммита переносятся в working directory, новый коммит не создается

Логи

Git log # покажет список произведенных изменений

git log --pretty=oneline # однострочная история

git log --pretty=format:"%h %ad | %s%d [%an]" --graph --date=short

--pretty="..." # определяет формат вывода; %h # укороченный hash коммита; %d # дополнения коммита («головы» веток или теги);

%ad # дата коммита; %s # комментарий; %an # имя автора; --graph # отображает дерево коммитов в виде ASCII-графика;

--date=short # сохраняет формат даты коротким и симпатичным

Alias:

Прописал в git bash:

git config --global alias.co checkout

git config --global alias.ci commit

git config --global alias.st status

git config --global alias.br branch

git config --global alias.hist "log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short"

git config --global alias.type 'cat-file -t'

git config --global alias.dump 'cat-file -p'

Добавил в файл .gitconfig:

[alias]

co = checkout

ci = commit

st = status

br = branch

hist = log --pretty=format:"%h %ad | %s%d [%an]" --graph --date=short

type = cat-file -t

dump = cat-file -p

Переключение между коммитами, тэги:

Git hist (git log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short)

Git hist main –all # покажет все логи ветки main

git co # переключиться в более старый коммит

git co main # возврат к последней версии ветки

git co ^ # переключится на более старую версию

git tag # покажет все доступные тэги

Репозитории:

git remote -v # показать список удалённых репозиториев, связанных с этим

git remote add origin git@github.com:nicothin/test.git # добавить удалённый репозиторий (с сокр. именем origin) с указанным URL

git fetch origin # скачать все ветки с удаленного репозитория (с сокр. именем origin), но не сливать со своими ветками

git checkout origin/github_branch # посмотреть ветку, скачанную с удалённого репозитория

(локальной редактируемой копии не создаётся! если нужно редактировать, придётся влить)

git push origin master # отправить в удалённый репозиторий (с сокр. именем origin) данные своей ветки master

git pull origin # влить изменения с удалённого репозитория (все ветки)

git pull origin master # влить изменения с удалённого репозитория (только указанная ветка)

В репозитории хранился файл, изменил, НЕ использовал git add, необходимо вернуть старую версию:

Git checkout ‘filename’

В репозитории хранился файл, изменил, использовал git add, но не использовал commit, необходимо отменить:

git reset HEAD - Снять индексацию изменений и git checkout "filename"

В репозитории хранился файл, использовал git add, использовал commit, необходимо отменить:

git revert HEAD - позволяет отменить любые коммиты в репозиторий (переходит в редактор, где можно отредактировать коммит-сообщение по умолчанию или оставить все как есть, необходимо сохранить и закрыть файл)